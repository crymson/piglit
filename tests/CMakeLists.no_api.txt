# Copyright Â© 2018 Intel Corporation

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

add_custom_target(
	static-shader-tests
	BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/shader.list
	COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/find_static_tests.py ${CMAKE_CURRENT_SOURCE_DIR} shader ${CMAKE_CURRENT_BINARY_DIR}/shader.list
	VERBATIM
)
add_custom_target(
	static-glslparser-tests
	BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/glslparser.list
	COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/find_static_tests.py ${CMAKE_CURRENT_SOURCE_DIR} glslparser ${CMAKE_CURRENT_BINARY_DIR}/glslparser.list
	VERBATIM
)
add_custom_target(
	static-asmparser-tests
	BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/asmparser.list
	COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/find_static_tests.py ${CMAKE_CURRENT_SOURCE_DIR} asmparser ${CMAKE_CURRENT_BINARY_DIR}/asmparser.list
	VERBATIM
)
add_custom_target(
	static-program-tests
	BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/program.list
	COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/find_static_tests.py ${CMAKE_CURRENT_SOURCE_DIR} program ${CMAKE_CURRENT_BINARY_DIR}/program.list
	VERBATIM
)

function(piglit_generate_xml name profile meta_target extra_args)
	add_custom_command(
		OUTPUT ${CMAKE_BINARY_DIR}/tests/${name}.xml
		COMMAND ${CMAKE_COMMAND} -E env PIGLIT_BUILD_TREE=${CMAKE_BINARY_DIR} ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/serializer.py ${name} ${CMAKE_CURRENT_SOURCE_DIR}/${profile}.py ${CMAKE_BINARY_DIR}/tests/${name}.xml  ${extra_args}
		DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${profile}.py ${CMAKE_CURRENT_SOURCE_DIR}/serializer.py ${ARGN}
		VERBATIM
	)
	add_custom_target(
		generate-${name}-xml
		DEPENDS ${CMAKE_BINARY_DIR}/tests/${name}.xml
	)
	add_dependencies(${meta_target} generate-${name}-xml)
endfunction()

add_custom_target(gen-gl-xml)
piglit_generate_xml(opengl opengl gen-gl-xml "")
piglit_generate_xml(no_error no_error gen-gl-xml "")
piglit_generate_xml(quick_gl quick_gl gen-gl-xml "")
piglit_generate_xml(llvmpipe_gl llvmpipe_gl gen-gl-xml "")
piglit_generate_xml(sanity sanity gen-gl-xml "")

add_custom_target(gen-gl-gen-xml)
piglit_generate_xml(glslparser glslparser gen-gl-gen-xml "" gen-gl-tests static-glslparser-tests static-asmparser-tests)
piglit_generate_xml(glslparser_arb_compat glslparser gen-gl-gen-xml "--glsl-arb-compat" gen-gl-tests static-glslparser-tests static-asmparser-tests)
piglit_generate_xml(shader shader gen-gl-gen-xml "" gen-gl-tests static-shader-tests)
piglit_generate_xml(quick_shader quick_shader gen-gl-gen-xml "" gen-gl-tests static-shader-tests)
piglit_generate_xml(shader_multi shader gen-gl-gen-xml "--no-process-isolation" gen-gl-tests static-shader-tests)
piglit_generate_xml(quick_shader_multi quick_shader gen-gl-gen-xml "--no-process-isolation" gen-gl-tests static-shader-tests)

add_custom_target(gen-cl-xml)
piglit_generate_xml(cl cl gen-cl-xml "" gen-cl-tests static-program-tests)

add_custom_target(gen-xml ALL)

if(${PIGLIT_BUILD_GL_TESTS} OR ${PIGLIT_BUILD_GLES2_TESTS} OR ${PIGLIT_BUILD_GLES3_TESTS})
	add_dependencies(gen-xml gen-gl-xml)
	add_dependencies(gen-xml gen-gl-gen-xml)
endif(${PIGLIT_BUILD_GL_TESTS} OR ${PIGLIT_BUILD_GLES2_TESTS} OR ${PIGLIT_BUILD_GLES3_TESTS})

if(${PIGLIT_BUILD_CL_TESTS})
	add_dependencies(gen-xml gen-cl-xml)
endif(${PIGLIT_BUILD_CL_TESTS})

# vim: ft=cmake
